###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, Generic, List, Optional, TypeVar, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class Instrumentation(BaseModel):
    bass: Optional[int] = None
    tenor: Optional[int] = None
    alto: Optional[int] = None
    soprano: Optional[int] = None

class NoteDuration(BaseModel):
    note: Optional[int] = None
    duration: Optional[float] = None

class Phrase(BaseModel):
    phrase_label: Optional[str] = None
    bass: List["NoteDuration"]
    tenor: List["NoteDuration"]
    alto: List["NoteDuration"]
    soprano: List["NoteDuration"]
    piano: List["NoteDuration"]
    percussion: List["NoteDuration"]

class RoundedBinaryForm(BaseModel):
    sectionA: List["Section"]
    sectionB: List["Section"]
    sectionA_prime: List["Section"]

class RoundedBinaryPiece(BaseModel):
    metadata: Optional["SongMetadata"] = None
    form: Optional["RoundedBinaryForm"] = None

class Section(BaseModel):
    section_label: Optional[str] = None
    phrases: List["Phrase"]

class SongMetadata(BaseModel):
    title: Optional[str] = None
    tempo: Optional[int] = None
    key_signature: Optional[str] = None
    time_signature: Optional[str] = None
    instruments: Optional["Instrumentation"] = None
